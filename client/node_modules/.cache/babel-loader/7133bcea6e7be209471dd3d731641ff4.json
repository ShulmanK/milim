{"ast":null,"code":"var _jsxFileName = \"/Users/sky/Documents/WEB/Projects/milim/milim/src/containers/FormAddWord/FormAddWord.js\";\nimport React, { Component, Fragment } from 'react';\nimport FormInfinitive from '../../components/WordForms/FormInfinitive/FormInfinitive';\nimport FormPast from '../../components/WordForms/FormPast/FormPast';\nimport FormFuture from '../../components/WordForms/FormFuture/FormFuture';\nimport classes from '../../components/WordForms/FormInfinitive/FormInfinitive.module.css';\nimport formConfigMobile from \"../../components/WordForms/formConfigurationMobile\";\nimport CustomInput from \"../../components/WordForms/FormElements/CustomInput/CustomInput\";\n\nclass FormAddWord extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      step: 1,\n      infinitive: '',\n      imperative_man_singular: '',\n      imperative_man_plural: '',\n      imperative_woman_singular: '',\n      imperative_woman_plural: '',\n      present_man_singular: '',\n      present_man_plural: '',\n      present_woman_singular: '',\n      present_woman_plural: '',\n      past_man_1st: '',\n      past_woman_1st: '',\n      past_man_singular_2nd: '',\n      past_man_plural_2nd: '',\n      past_woman_singular_2nd: '',\n      past_woman_plural_2nd: '',\n      past_man_singular_3nd: '',\n      past_woman_singular_3nd: '',\n      past_plural_3nd: '',\n      future_man_1st: '',\n      future_woman_1st: '',\n      future_man_singular_2nd: '',\n      future_man_plural_2nd: '',\n      future_woman_singular_2nd: '',\n      future_woman_plural_2nd: '',\n      future_man_singular_3nd: '',\n      future_man_plural_3nd: '',\n      future_woman_singular_3nd: '',\n      future_woman_plural_3nd: ''\n    };\n\n    this.getInputs = () => {\n      const {\n        infinitive,\n        imperative_man_singular,\n        imperative_man_plural,\n        imperative_woman_singular,\n        imperative_woman_plural,\n        present_man_singular,\n        present_man_plural,\n        present_woman_singular,\n        present_woman_plural,\n        past_man_1st,\n        past_woman_1st,\n        past_man_singular_2nd,\n        past_man_plural_2nd,\n        past_woman_singular_2nd,\n        past_woman_plural_2nd,\n        past_man_singular_3nd,\n        past_woman_singular_3nd,\n        past_plural_3nd,\n        future_man_1st,\n        future_woman_1st,\n        future_man_singular_2nd,\n        future_man_plural_2nd,\n        future_woman_singular_2nd,\n        future_woman_plural_2nd,\n        future_man_singular_3nd,\n        future_man_plural_3nd,\n        future_woman_singular_3nd,\n        future_woman_plural_3nd,\n        infinitive_transcription,\n        imperative_man_singular_transcription,\n        imperative_man_plural_transcription,\n        imperative_woman_singular_transcription,\n        imperative_woman_plural_transcription,\n        present_man_singular_transcription,\n        present_man_plural_transcription,\n        present_woman_singular_transcription,\n        present_woman_plural_transcription,\n        past_man_1st_transcription,\n        past_woman_1st_transcription,\n        past_man_singular_2nd_transcription,\n        past_man_plural_2nd_transcription,\n        past_woman_singular_2nd_transcription,\n        past_woman_plural_2nd_transcription,\n        past_man_singular_3nd_transcription,\n        past_woman_singular_3nd_transcription,\n        past_plural_3nd_transcription,\n        future_man_1st_transcription,\n        future_woman_1st_transcription,\n        future_man_singular_2nd_transcription,\n        future_man_plural_2nd_transcription,\n        future_woman_singular_2nd_transcription,\n        future_woman_plural_2nd_transcription,\n        future_man_singular_3nd_transcription,\n        future_man_plural_3nd_transcription,\n        future_woman_singular_3nd_transcription,\n        future_woman_plural_3nd_transcription\n      } = this.state;\n      const values = {\n        infinitive,\n        imperative_man_singular,\n        imperative_man_plural,\n        imperative_woman_singular,\n        imperative_woman_plural,\n        present_man_singular,\n        present_man_plural,\n        present_woman_singular,\n        present_woman_plural,\n        past_man_1st,\n        past_woman_1st,\n        past_man_singular_2nd,\n        past_man_plural_2nd,\n        past_woman_singular_2nd,\n        past_woman_plural_2nd,\n        past_man_singular_3nd,\n        past_woman_singular_3nd,\n        past_plural_3nd,\n        future_man_1st,\n        future_woman_1st,\n        future_man_singular_2nd,\n        future_man_plural_2nd,\n        future_woman_singular_2nd,\n        future_woman_plural_2nd,\n        future_man_singular_3nd,\n        future_man_plural_3nd,\n        future_woman_singular_3nd,\n        future_woman_plural_3nd,\n        infinitive_transcription,\n        imperative_man_singular_transcription,\n        imperative_man_plural_transcription,\n        imperative_woman_singular_transcription,\n        imperative_woman_plural_transcription,\n        present_man_singular_transcription,\n        present_man_plural_transcription,\n        present_woman_singular_transcription,\n        present_woman_plural_transcription,\n        past_man_1st_transcription,\n        past_woman_1st_transcription,\n        past_man_singular_2nd_transcription,\n        past_man_plural_2nd_transcription,\n        past_woman_singular_2nd_transcription,\n        past_woman_plural_2nd_transcription,\n        past_man_singular_3nd_transcription,\n        past_woman_singular_3nd_transcription,\n        past_plural_3nd_transcription,\n        future_man_1st_transcription,\n        future_woman_1st_transcription,\n        future_man_singular_2nd_transcription,\n        future_man_plural_2nd_transcription,\n        future_woman_singular_2nd_transcription,\n        future_woman_plural_2nd_transcription,\n        future_man_singular_3nd_transcription,\n        future_man_plural_3nd_transcription,\n        future_woman_singular_3nd_transcription,\n        future_woman_plural_3nd_transcription\n      };\n      return values;\n    };\n\n    this.nextStep = () => {\n      const {\n        step\n      } = this.state;\n      this.setState({\n        step: step + 1\n      });\n    };\n\n    this.prevStep = () => {\n      const {\n        step\n      } = this.state;\n      this.setState({\n        step: step - 1\n      });\n    };\n\n    this.handleChange = input => e => {\n      this.setState({\n        [input]: e.target.value\n      });\n    };\n\n    this.renderForm = (timeTitles, type) => {\n      let values = this.getInputs();\n      let inputs = [];\n      let titles = [];\n      let icons = [];\n      let config = type === 'mobile' ? formConfigMobile : formConfigDesktop;\n      timeTitles.map(timeTitle => {\n        let timeInputs = config.filter(input => input.time === timeTitle && input.type === 'input');\n        let timeTitles = config.filter(title => title.time === timeTitle && title.type === 'title');\n        let timeIcons = config.filter(icon => icon.type === 'icon');\n        timeInputs.map(input => inputs.push(input));\n        timeTitles.map(title => titles.push(title));\n        timeIcons.map(icon => {\n          let arrayIcons = icon.time[timeTitle];\n\n          if (arrayIcons) {\n            arrayIcons.map(icon => icons.push(icon));\n          }\n        });\n      });\n      console.log('icons', icons);\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: classes.FormGrid,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 16\n        }\n      }, inputs.map((input, index) => {\n        const {\n          rowStart,\n          rowEnd,\n          columnStart,\n          columnEnd,\n          time,\n          label,\n          placeholder,\n          name,\n          iconSrc,\n          iconAlt\n        } = input;\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: classes.FormGridItem,\n          style: {\n            gridRow: `${rowStart}/${rowEnd}`,\n            gridColumn: `${columnStart}/${columnEnd}`\n          },\n          key: index,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(CustomInput, {\n          name: name,\n          inputLabel: label,\n          id: name,\n          placeholder: placeholder,\n          onChange: this.handleChange(name),\n          value: values[name] // defaultValue={''}\n          ,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 25\n          }\n        }));\n      }), titles.map((title, index) => {\n        const {\n          rowStart,\n          rowEnd,\n          columnStart,\n          columnEnd,\n          name\n        } = title;\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: [classes.ConjugationTitle, classes.FormGridItem].join(' '),\n          style: {\n            gridRow: `${rowStart}/${rowEnd}`,\n            gridColumn: `${columnStart}/${columnEnd}`\n          },\n          key: index,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 21\n          }\n        }, name);\n      }), icons.map((icon, index) => {\n        const {\n          iconSrc,\n          alt,\n          rowStart,\n          rowEnd,\n          columnStart,\n          columnEnd\n        } = icon;\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: classes.FormGridItem,\n          style: {\n            gridRow: `${rowStart}/${rowEnd}`,\n            gridColumn: `${columnStart}/${columnEnd}`\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"img\", {\n          className: classes.Icon,\n          src: iconSrc,\n          alt: alt,\n          key: index,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 25\n          }\n        }));\n      }));\n    };\n\n    this.getFormMobile = () => {\n      const {\n        step\n      } = this.state;\n\n      switch (step) {\n        case 1:\n          return /*#__PURE__*/React.createElement(FormInfinitive, {\n            nextStep: this.nextStep,\n            handleChange: this.handleChange,\n            renderForm: this.renderForm(),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 21\n            }\n          });\n\n        case 2:\n          return /*#__PURE__*/React.createElement(FormPast, {\n            nextStep: this.nextStep,\n            prevStep: this.prevStep,\n            handleChange: this.handleChange,\n            renderForm: this.renderForm,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 21\n            }\n          });\n\n        case 3:\n          return /*#__PURE__*/React.createElement(FormFuture, {\n            nextStep: this.nextStep,\n            prevStep: this.prevStep,\n            handleChange: this.handleChange,\n            renderForm: this.renderForm,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 21\n            }\n          });\n\n        case 4:\n          return /*#__PURE__*/React.createElement(\"h1\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 24\n            }\n          }, \"Success\");\n      }\n    };\n  }\n\n  render() {\n    let width = window.innerWidth;\n\n    if (width < 500) {\n      return /*#__PURE__*/React.createElement(Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: classes.FormTitle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 21\n        }\n      }, \"Add Form\"), this.getFormMobile());\n    } else {\n      return /*#__PURE__*/React.createElement(Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 21\n        }\n      }, \"This is a desktop\"));\n    }\n  }\n\n}\n\nexport default FormAddWord;","map":{"version":3,"sources":["/Users/sky/Documents/WEB/Projects/milim/milim/src/containers/FormAddWord/FormAddWord.js"],"names":["React","Component","Fragment","FormInfinitive","FormPast","FormFuture","classes","formConfigMobile","CustomInput","FormAddWord","state","step","infinitive","imperative_man_singular","imperative_man_plural","imperative_woman_singular","imperative_woman_plural","present_man_singular","present_man_plural","present_woman_singular","present_woman_plural","past_man_1st","past_woman_1st","past_man_singular_2nd","past_man_plural_2nd","past_woman_singular_2nd","past_woman_plural_2nd","past_man_singular_3nd","past_woman_singular_3nd","past_plural_3nd","future_man_1st","future_woman_1st","future_man_singular_2nd","future_man_plural_2nd","future_woman_singular_2nd","future_woman_plural_2nd","future_man_singular_3nd","future_man_plural_3nd","future_woman_singular_3nd","future_woman_plural_3nd","getInputs","infinitive_transcription","imperative_man_singular_transcription","imperative_man_plural_transcription","imperative_woman_singular_transcription","imperative_woman_plural_transcription","present_man_singular_transcription","present_man_plural_transcription","present_woman_singular_transcription","present_woman_plural_transcription","past_man_1st_transcription","past_woman_1st_transcription","past_man_singular_2nd_transcription","past_man_plural_2nd_transcription","past_woman_singular_2nd_transcription","past_woman_plural_2nd_transcription","past_man_singular_3nd_transcription","past_woman_singular_3nd_transcription","past_plural_3nd_transcription","future_man_1st_transcription","future_woman_1st_transcription","future_man_singular_2nd_transcription","future_man_plural_2nd_transcription","future_woman_singular_2nd_transcription","future_woman_plural_2nd_transcription","future_man_singular_3nd_transcription","future_man_plural_3nd_transcription","future_woman_singular_3nd_transcription","future_woman_plural_3nd_transcription","values","nextStep","setState","prevStep","handleChange","input","e","target","value","renderForm","timeTitles","type","inputs","titles","icons","config","formConfigDesktop","map","timeTitle","timeInputs","filter","time","title","timeIcons","icon","push","arrayIcons","console","log","FormGrid","index","rowStart","rowEnd","columnStart","columnEnd","label","placeholder","name","iconSrc","iconAlt","FormGridItem","gridRow","gridColumn","ConjugationTitle","join","alt","Icon","getFormMobile","render","width","window","innerWidth","FormTitle"],"mappings":"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","sourcesContent":["import React, {Component, Fragment} from 'react';\nimport FormInfinitive from '../../components/WordForms/FormInfinitive/FormInfinitive';\nimport FormPast from '../../components/WordForms/FormPast/FormPast';\nimport FormFuture from '../../components/WordForms/FormFuture/FormFuture';\nimport classes from '../../components/WordForms/FormInfinitive/FormInfinitive.module.css';\nimport formConfigMobile from \"../../components/WordForms/formConfigurationMobile\";\nimport CustomInput from \"../../components/WordForms/FormElements/CustomInput/CustomInput\";\n\nclass FormAddWord extends Component {\n    state = {\n        step: 1,\n        infinitive: '',\n        imperative_man_singular: '',\n        imperative_man_plural: '',\n        imperative_woman_singular: '',\n        imperative_woman_plural: '',\n        present_man_singular: '',\n        present_man_plural: '',\n        present_woman_singular: '',\n        present_woman_plural: '',\n        past_man_1st: '',\n        past_woman_1st: '',\n        past_man_singular_2nd: '',\n        past_man_plural_2nd: '',\n        past_woman_singular_2nd: '',\n        past_woman_plural_2nd: '',\n        past_man_singular_3nd: '',\n        past_woman_singular_3nd: '',\n        past_plural_3nd: '',\n        future_man_1st: '',\n        future_woman_1st: '',\n        future_man_singular_2nd: '',\n        future_man_plural_2nd: '',\n        future_woman_singular_2nd: '',\n        future_woman_plural_2nd: '',\n        future_man_singular_3nd: '',\n        future_man_plural_3nd: '',\n        future_woman_singular_3nd: '',\n        future_woman_plural_3nd: ''\n    };\n    getInputs = () => {\n        const {\n            infinitive,\n            imperative_man_singular,\n            imperative_man_plural,\n            imperative_woman_singular,\n            imperative_woman_plural,\n            present_man_singular,\n            present_man_plural,\n            present_woman_singular,\n            present_woman_plural,\n            past_man_1st,\n            past_woman_1st,\n            past_man_singular_2nd,\n            past_man_plural_2nd,\n            past_woman_singular_2nd,\n            past_woman_plural_2nd,\n            past_man_singular_3nd,\n            past_woman_singular_3nd,\n            past_plural_3nd,\n            future_man_1st,\n            future_woman_1st,\n            future_man_singular_2nd,\n            future_man_plural_2nd,\n            future_woman_singular_2nd,\n            future_woman_plural_2nd,\n            future_man_singular_3nd,\n            future_man_plural_3nd,\n            future_woman_singular_3nd,\n            future_woman_plural_3nd,\n            infinitive_transcription,\n            imperative_man_singular_transcription,\n            imperative_man_plural_transcription,\n            imperative_woman_singular_transcription,\n            imperative_woman_plural_transcription,\n            present_man_singular_transcription,\n            present_man_plural_transcription,\n            present_woman_singular_transcription,\n            present_woman_plural_transcription,\n            past_man_1st_transcription,\n            past_woman_1st_transcription,\n            past_man_singular_2nd_transcription,\n            past_man_plural_2nd_transcription,\n            past_woman_singular_2nd_transcription,\n            past_woman_plural_2nd_transcription,\n            past_man_singular_3nd_transcription,\n            past_woman_singular_3nd_transcription,\n            past_plural_3nd_transcription,\n            future_man_1st_transcription,\n            future_woman_1st_transcription,\n            future_man_singular_2nd_transcription,\n            future_man_plural_2nd_transcription,\n            future_woman_singular_2nd_transcription,\n            future_woman_plural_2nd_transcription,\n            future_man_singular_3nd_transcription,\n            future_man_plural_3nd_transcription,\n            future_woman_singular_3nd_transcription,\n            future_woman_plural_3nd_transcription\n        } = this.state;\n        const values = {\n            infinitive,\n            imperative_man_singular,\n            imperative_man_plural,\n            imperative_woman_singular,\n            imperative_woman_plural,\n            present_man_singular,\n            present_man_plural,\n            present_woman_singular,\n            present_woman_plural,\n            past_man_1st,\n            past_woman_1st,\n            past_man_singular_2nd,\n            past_man_plural_2nd,\n            past_woman_singular_2nd,\n            past_woman_plural_2nd,\n            past_man_singular_3nd,\n            past_woman_singular_3nd,\n            past_plural_3nd,\n            future_man_1st,\n            future_woman_1st,\n            future_man_singular_2nd,\n            future_man_plural_2nd,\n            future_woman_singular_2nd,\n            future_woman_plural_2nd,\n            future_man_singular_3nd,\n            future_man_plural_3nd,\n            future_woman_singular_3nd,\n            future_woman_plural_3nd,\n            infinitive_transcription,\n            imperative_man_singular_transcription,\n            imperative_man_plural_transcription,\n            imperative_woman_singular_transcription,\n            imperative_woman_plural_transcription,\n            present_man_singular_transcription,\n            present_man_plural_transcription,\n            present_woman_singular_transcription,\n            present_woman_plural_transcription,\n            past_man_1st_transcription,\n            past_woman_1st_transcription,\n            past_man_singular_2nd_transcription,\n            past_man_plural_2nd_transcription,\n            past_woman_singular_2nd_transcription,\n            past_woman_plural_2nd_transcription,\n            past_man_singular_3nd_transcription,\n            past_woman_singular_3nd_transcription,\n            past_plural_3nd_transcription,\n            future_man_1st_transcription,\n            future_woman_1st_transcription,\n            future_man_singular_2nd_transcription,\n            future_man_plural_2nd_transcription,\n            future_woman_singular_2nd_transcription,\n            future_woman_plural_2nd_transcription,\n            future_man_singular_3nd_transcription,\n            future_man_plural_3nd_transcription,\n            future_woman_singular_3nd_transcription,\n            future_woman_plural_3nd_transcription\n        };\n        return values;\n    }\n    nextStep = () => {\n        const {step} = this.state;\n        this.setState({step: step + 1})\n    };\n    prevStep = () => {\n        const {step} = this.state;\n        this.setState({step: step - 1})\n    };\n    handleChange = input => e => {\n        this.setState({[input]: e.target.value});\n    };\n    renderForm = (timeTitles, type) => {\n        let values = this.getInputs();\n        let inputs = [];\n        let titles = [];\n        let icons = [];\n        let config = type === 'mobile' ? formConfigMobile :  formConfigDesktop;\n        timeTitles.map(timeTitle => {\n            let timeInputs = config.filter(input => input.time === timeTitle && input.type === 'input');\n            let timeTitles = config.filter(title => title.time === timeTitle && title.type === 'title');\n            let timeIcons = config.filter(icon => icon.type === 'icon');\n            timeInputs.map(input => inputs.push(input));\n            timeTitles.map(title => titles.push(title));\n            timeIcons.map(icon => {\n                let arrayIcons = icon.time[timeTitle];\n                if (arrayIcons) {\n                    arrayIcons.map(icon => icons.push(icon));\n                }\n            })\n        })\n        console.log('icons', icons);\n        return <div className={classes.FormGrid}>\n            {inputs.map((input, index) => {\n                const {rowStart, rowEnd, columnStart, columnEnd, time, label, placeholder, name, iconSrc, iconAlt} = input;\n                return (\n                    <div className={classes.FormGridItem} style={{\n                        gridRow: `${rowStart}/${rowEnd}`,\n                        gridColumn: `${columnStart}/${columnEnd}`\n                    }}\n                         key={index}\n                    >\n                        <CustomInput\n                            name={name}\n                            inputLabel={label}\n                            id={name}\n                            placeholder={placeholder}\n                            onChange={this.handleChange(name)}\n                            value={values[name]}\n                            // defaultValue={''}\n                        />\n                    </div>\n                )\n            })}\n            {titles.map((title, index) => {\n                const {rowStart, rowEnd, columnStart, columnEnd, name,} = title;\n                return (\n                    <div className={[classes.ConjugationTitle, classes.FormGridItem].join(' ')} style={{\n                        gridRow: `${rowStart}/${rowEnd}`,\n                        gridColumn: `${columnStart}/${columnEnd}`\n                    }}\n                         key={index}\n                    >{name}</div>\n                )\n            })}\n            {icons.map((icon, index) => {\n                const {iconSrc, alt, rowStart, rowEnd, columnStart, columnEnd} = icon;\n                return (\n                    <div className={classes.FormGridItem} style={{\n                        gridRow: `${rowStart}/${rowEnd}`,\n                        gridColumn: `${columnStart}/${columnEnd}`\n                    }}>\n                        <img className={classes.Icon} src={iconSrc}\n                             alt={alt}\n                             key={index}/>\n                    </div>\n                )\n            })}\n        </div>\n    }\n    getFormMobile= () => {\n        const {step} = this.state;\n        switch (step) {\n            case 1:\n                return (\n                    <FormInfinitive\n                        nextStep={this.nextStep}\n                        handleChange={this.handleChange}\n                        renderForm={this.renderForm()}\n                    />\n                );\n            case 2:\n                return (\n                    <FormPast\n                        nextStep={this.nextStep}\n                        prevStep={this.prevStep}\n                        handleChange={this.handleChange}\n                        renderForm={this.renderForm}\n                    />\n                );\n            case 3:\n                return (\n                    <FormFuture\n                        nextStep={this.nextStep}\n                        prevStep={this.prevStep}\n                        handleChange={this.handleChange}\n                        renderForm={this.renderForm}\n                    />\n                );\n            case 4:\n                return <h1>Success</h1>\n        }\n    };\n    render() {\n        let width = window.innerWidth;\n        if(width < 500){\n            return (\n                <Fragment>\n                    <div className={classes.FormTitle}>Add Form</div>\n                    {this.getFormMobile()}\n                </Fragment>\n            )\n        } else {\n            return (\n                <Fragment>\n                    <div>This is a desktop</div>\n                </Fragment>\n            )\n        }\n\n    }\n}\nexport default FormAddWord;"]},"metadata":{},"sourceType":"module"}