{"ast":null,"code":"var _jsxFileName = \"/Users/sky/Documents/WEB/Projects/milim/milim/src/components/WordForms/FormPast/FormPast.js\";\nimport React, { Component, Fragment } from 'react';\nimport Button from \"@material-ui/core/Button\";\nimport ManSign from \"../../../icons/mars.svg\";\nimport WomanSign from \"../../../icons/female.svg\";\nimport SingularSign from \"../../../icons/user.svg\";\nimport TextField from \"@material-ui/core/TextField\";\nimport MagenDavid from \"../../../icons/jewish.svg\";\nimport PluralSign from \"../../../icons/group.svg\";\nimport formInputConfig from \"../formInputsConfiguration\";\nimport classes from '../FormInfinitive/FormInfinitive.module.css';\nimport CustomInput from \"../FormElements/CustomInput/CustomInput\";\n\nclass FormPast extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.continue = e => {\n      e.preventDefault();\n      this.props.nextStep();\n    };\n\n    this.back = e => {\n      e.preventDefault();\n      this.props.prevStep();\n    };\n\n    this.renderForm = timeTitle => {\n      const {\n        values,\n        handleChange\n      } = this.props;\n      const timeInputs = formInputConfig.filter(input => input.time === timeTitle);\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: classes.FormGridPast,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 16\n        }\n      }, this.renderFormSvg(timeTitle), timeInputs.map((input, index) => {\n        const {\n          rowStart,\n          rowEnd,\n          columnStart,\n          columnEnd,\n          time,\n          label,\n          placeholder,\n          name\n        } = input;\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: classes.FormGridItem,\n          style: {\n            gridRow: `${rowStart}/${rowEnd}`,\n            gridColumn: `${columnStart}/${columnEnd}`\n          },\n          key: index,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(CustomInput, {\n          name: name,\n          inputLabel: label,\n          id: name,\n          placeholder: placeholder,\n          onChange: handleChange(name),\n          value: values[name],\n          defaultValue: '',\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 25\n          }\n        }));\n      }));\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }\n    }, this.renderForm(\"past\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.ButtonSection,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      onClick: this.continue,\n      variant: \"contained\",\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 21\n      }\n    }, \"Continue\"), /*#__PURE__*/React.createElement(Button, {\n      onClick: this.back,\n      variant: \"contained\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 21\n      }\n    }, \"Back\")));\n  }\n\n}\n\nexport default FormPast;","map":{"version":3,"sources":["/Users/sky/Documents/WEB/Projects/milim/milim/src/components/WordForms/FormPast/FormPast.js"],"names":["React","Component","Fragment","Button","TextField","formInputConfig","classes","CustomInput","FormPast","continue","e","preventDefault","props","nextStep","back","prevStep","renderForm","timeTitle","values","handleChange","timeInputs","filter","input","time","FormGridPast","renderFormSvg","map","index","rowStart","rowEnd","columnStart","columnEnd","label","placeholder","name","FormGridItem","gridRow","gridColumn","render","ButtonSection"],"mappings":"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","sourcesContent":["import React, {Component, Fragment} from 'react';\nimport Button from \"@material-ui/core/Button\";\nimport ManSign from \"../../../icons/mars.svg\";\nimport WomanSign from \"../../../icons/female.svg\";\nimport SingularSign from \"../../../icons/user.svg\";\nimport TextField from \"@material-ui/core/TextField\";\nimport MagenDavid from \"../../../icons/jewish.svg\";\nimport PluralSign from \"../../../icons/group.svg\";\nimport formInputConfig from \"../formInputsConfiguration\";\nimport classes from '../FormInfinitive/FormInfinitive.module.css';\nimport CustomInput from \"../FormElements/CustomInput/CustomInput\";\n\nclass FormPast extends Component {\n    continue = (e) => {\n        e.preventDefault();\n        this.props.nextStep();\n    };\n\n    back = (e) => {\n        e.preventDefault();\n        this.props.prevStep();\n    };\n\n    renderForm = (timeTitle)=> {\n        const {values, handleChange} = this.props;\n        const timeInputs = formInputConfig.filter(input => input.time === timeTitle);\n        return <div className={classes.FormGridPast}>\n            {/*TO DO make it more generic*/}\n            {/*SVG images*/}\n            {this.renderFormSvg(timeTitle)}\n            {/*Mapping inputs*/}\n            {timeInputs.map((input, index) => {\n                const {rowStart, rowEnd, columnStart, columnEnd, time, label, placeholder, name} = input;\n                return (\n                    <div className={classes.FormGridItem} style={{\n                        gridRow: `${rowStart}/${rowEnd}`,\n                        gridColumn: `${columnStart}/${columnEnd}`\n                    }}\n                         key={index}\n                    >\n                        <CustomInput\n                            name={name}\n                            inputLabel={label}\n                            id={name}\n                            placeholder={placeholder}\n                            onChange={handleChange(name)}\n                            value={values[name]}\n                            defaultValue={''}\n                        />\n                    </div>\n                )\n            })}\n        </div>\n\n    }\n\n    render() {\n        return (\n            <Fragment>\n\n                {this.renderForm(\"past\")}\n                <div className={classes.ButtonSection}>\n                    <Button\n                        onClick={this.continue}\n                        variant=\"contained\"\n                        color=\"primary\">Continue</Button>\n                    <Button\n                        onClick={this.back}\n                        variant=\"contained\">Back</Button>\n                </div>\n\n\n            </Fragment>\n        )\n    }\n}\n\nexport default FormPast;"]},"metadata":{},"sourceType":"module"}